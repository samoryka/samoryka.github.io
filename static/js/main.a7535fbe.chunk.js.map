{"version":3,"sources":["assets/documents/resume.pdf","assets/images/profilePic.jpg","assets/images/projects/amcs.jpg","assets/images/projects/lesfurets.jpg","assets/images/projects/adnosco.jpg","assets/images/projects/verecipes.jpg","assets/images/projects/cheapconverter.jpg","assets/images/projects/parkendd.jpg","components/Header/HeaderLink/HeaderLink.tsx","data/header-links.ts","components/Header/Header.tsx","components/Utils/ComponentTransition.tsx","components/Content/About/About.tsx","components/Content/Projects/Project/Project.tsx","data/projects.ts","components/Content/Projects/Projects.tsx","components/Content/Content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HeaderLink","link","title","isCurrent","className","Link","to","HEADER_LINKS","withRouter","location","useState","currentPage","setCurrentPage","useEffect","pathname","navLinks","map","headerLink","key","ComponentTransition","animation","children","componentDisplayed","setComponentDisplayed","in","timeout","classNames","appear","About","src","profilePic","alt","href","target","rel","resume","Project","description","image","technologies","join","PROJECTS","lesfuretsImage","amcsImage","verecipesImage","cheapConverterImage","adnoscoImage","parkenddImage","Projects","projects","project","Content","Switch","Route","exact","path","process","render","Redirect","component","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","hasChildNodes","hydrate","BrowserRouter","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7535fbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.a1eb410e.pdf\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.cafcdb1f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amcs.d07ed275.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lesfurets.6a33adff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adnosco.d3a9e2d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/verecipes.0fb2d378.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cheapconverter.bef90a7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parkendd.646d3a2f.jpg\";","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./HeaderLink.css\";\nimport { HeaderItem } from \"../../../types\";\n\nconst HeaderLink: (props: HeaderItem & {isCurrent: boolean}) => JSX.Element = ({link, title, isCurrent}) => (\n    <li className=\"navLinkContainer\">\n        <Link\n            to={link}\n            className={`navLink ${isCurrent ? \"currentNavLink\" : \"\"}`}>\n            {title}\n        </Link>\n    </li>\n);\n\nexport default HeaderLink;\n","import {HeaderItem} from \"../types\";\n\nexport const HEADER_LINKS: HeaderItem[] = [\n    {\n        link: \"/about\",\n        title: \"About\",\n    },\n    {\n        link: \"/projects\",\n        title: \"Projects\",\n    }\n]","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\n\nimport HeaderLink from \"./HeaderLink/HeaderLink\";\n\nimport \"./Header.css\";\nimport { HEADER_LINKS } from \"../../data/header-links\";\n\nconst Header: (props: RouteComponentProps) => JSX.Element = ({location}) => {\n    const [currentPage, setCurrentPage] = useState(\"/about\");\n\n    useEffect(() => {\n        setCurrentPage(location.pathname !== \"/\" ? location.pathname : \"/about\")\n    }, [location.pathname]);\n\n    const navLinks = HEADER_LINKS.map(headerLink => (\n        <HeaderLink\n            key={headerLink.title}\n            title={headerLink.title}\n            link={headerLink.link}\n            isCurrent={currentPage === headerLink.link}\n        />\n    ));\n    \n    return (\n        <header className=\"appHeader\">\n            <div className=\"appHeaderContent\">\n                <Link to=\"/\" className=\"appHeaderTitle\">Samory Ka</Link>\n                <nav className=\"appHeaderNav\">\n                    <ul>\n                        {navLinks}\n                    </ul>\n                </nav>\n            </div>\n        </header>\n    );\n}\n\nexport default withRouter(Header);\n","import React, { useState, useEffect, ReactNode } from \"react\";\nimport { CSSTransition } from \"react-transition-group\"\n\nimport \"../../styles/animations.css\"\n\ninterface ComponentTransitionProps {\n    animation: string;\n    children: ReactNode;\n}\n\nconst ComponentTransition: (props: ComponentTransitionProps) => JSX.Element = ({ animation, children }) => {\n    const [componentDisplayed, setComponentDisplayed] = useState(false);\n    useEffect(() => {\n        setComponentDisplayed(true);\n        return () => setComponentDisplayed(false);\n    }, []);\n\n    return (\n        <CSSTransition\n            in={componentDisplayed}\n            timeout={500}\n            classNames={animation}\n            appear={true}>\n            {children}\n        </CSSTransition>\n    );\n}\n\nexport default ComponentTransition;\n","import * as React from \"react\";\nimport ComponentTransition from \"../../Utils/ComponentTransition\";\n\nimport resume from \"../../../assets/documents/resume.pdf\";\nimport profilePic from \"../../../assets/images/profilePic.jpg\";\nimport \"./About.css\";\n\nconst LINKEDIN_LINK = \"https://www.linkedin.com/in/samory-ka/\";\nconst GITHUB_LINK = \"https://github.com/samoryka\";\n\nconst About = () => (\n    <ComponentTransition animation=\"contentAnimation\">\n        <div>\n            <h2>About</h2>\n            <div className=\"profilePicContainer\">\n                <img src={profilePic} alt=\"This site's owner, Samory Ka\" />\n            </div>\n            <p>\n                <span>\n                    Hi there, my name is <b>Samory Ka</b>.\n                </span>\n            </p>\n            <p>\n                <span>\n                    I currently live in <b>Paris</b> and work as a <b>Software Engineer</b> for <a className=\"resumeLink\" href=\"https://lesfurets.com\" target=\"_blank\" rel=\"noopener noreferrer\" >lesfurets</a>.\n                </span>\n            </p>\n            <p>\n                <span>\n                    My interests include <b>Web Development</b>, <b> Software Accessibility</b>, <b>Music</b>, <b>Graphic Arts</b>, <b>Cooking</b> and many other things!\n                </span>\n            </p>\n            <p>\n                <span>\n                    You can find out more about me in <a className=\"resumeLink\" href={resume} target=\"_blank\" rel=\"noopener noreferrer\" >my resume</a>, on <a href={LINKEDIN_LINK} target=\"_blank\" rel=\"noopener noreferrer\" >LinkedIn</a> or on <a href={GITHUB_LINK} target=\"_blank\" rel=\"noopener noreferrer\" >GitHub</a>.\n                </span>\n            </p>\n        </div>\n    </ComponentTransition>\n);\n\nexport default About;\n","import React from \"react\";\nimport \"./Project.css\";\nimport { ProjectItem } from \"../../../../types\";\n\n\nconst Project: (props: ProjectItem) => JSX.Element = ({title, description, link, image, technologies}) => (\n    <div className=\"projectCard\">\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={image} alt={`screenshot of ${title}`} />\n            <div className=\"projectCardText\">\n                <p><span className=\"projectTitle\"><b>{title}</b></span></p>\n                <p><span className=\"projectDescription\">{description}</span></p>\n            </div>\n            <div className=\"projectTechnologiesContainer\">\n                <span>Technologies: <b>{technologies.join(\", \")}</b></span>\n\n            </div>\n        </a>\n    </div>\n);\n\nexport default Project;\n","import amcsImage from \"../assets/images/projects/amcs.jpg\";\nimport lesfuretsImage from \"../assets/images/projects/lesfurets.jpg\";\nimport adnoscoImage from \"../assets/images/projects/adnosco.jpg\";\nimport verecipesImage from \"../assets/images/projects/verecipes.jpg\";\nimport cheapConverterImage from \"../assets/images/projects/cheapconverter.jpg\";\nimport parkenddImage from \"../assets/images/projects/parkendd.jpg\";\nimport { ProjectItem } from \"../types\";\n\nexport const PROJECTS: ProjectItem[] = [\n    {\n        title: \"Comparison services\",\n        description: \"At lesfurets, my team works on creating comparators for home/financial products such as energy, broadband and mortgages. We ship new features on a daily basis.\",\n        link: \"https://www.lesfurets.com/energie/formulaire\",\n        image: lesfuretsImage,\n        technologies: [\"React\", \"TypeScript\", \"Java\", \"Docker\"]\n    },\n    {\n        title: \"AMCS\",\n        description: \"I developed an Adobe Reader plugin for AMCS, an application used at the TU Dresden to make lectures more interactive.\",\n        link: \"https://amcs.website/about\",\n        image: amcsImage,\n        technologies: [\"C++\"]\n    },\n    {\n        title: \"VeRecipes\",\n        description: \"An easy way to find new vegatarian recipes. I developed a REST API with Spring, deployed it to AWS and made an Android application to consume it.\",\n        link: \"https://github.com/samoryka/VeRecipesClient\",\n        image: verecipesImage,\n        technologies: [\"Java\", \"Spring\", \"Android\", \"AWS\"]\n    },\n    {\n        title: \"Cheap Converter\",\n        description: \"A simple React PWA I made to convert weights and volumes.\",\n        link: \"https://github.com/samoryka/cheap-converter\",\n        image: cheapConverterImage,\n        technologies: [\"React\", \"PWA\", \"JavaScript\"]\n    },\n    {\n        title: \"Adnosco\",\n        description: \"I helped develop new features for Adnosco, a research project about privacy. I specifically focused on improving the UI.\",\n        link: \"https://adnosco.liris.cnrs.fr/doku.php\",\n        image: adnoscoImage,\n        technologies: [\"JavaScript\", \"HTML/CSS\"]\n    },\n    {\n        title: \"ParkenDD\",\n        description: \"I helped overhaul the UI of ParkenDD (not yet deployed in the real application).\",\n        link: \"https://github.com/samoryka/ParkenDD\",\n        image: parkenddImage,\n        technologies: [\"Android\", \"Java\"]\n    }\n];","import React from \"react\";\n\nimport ComponentTransition from \"../../Utils/ComponentTransition\";\nimport Project from \"./Project/Project\";\n\nimport \"./Projects.css\";\nimport {PROJECTS} from \"../../../data/projects\";\n\nconst Projects = () => {\n    const projects = PROJECTS.map(project => (\n        <Project\n        key={project.title}\n        title={project.title}\n        link={project.link}\n        description={project.description}\n        image={project.image}\n        technologies={project.technologies} />\n    ));\n\n    return (\n        <ComponentTransition animation=\"contentAnimation\">\n            <div>\n                <h2>Projects</h2>\n                <p><span>Here are some of the projects I have worked on in the past:</span></p>\n                <div className=\"projectsContainer\">\n                    {projects}\n                </div>\n            </div>\n        </ComponentTransition>\n    );\n}\n\nexport default Projects;\n","import React, { FC } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport About from \"./About/About\";\nimport Projects from \"./Projects/Projects\";\n\nimport \"./Content.css\"\n\nconst Content: FC = () => (\n    <div className=\"content\">\n        <Switch>\n            <Route exact={true} path={`${process.env.PUBLIC_URL}/`} render={() => <Redirect to=\"/about\" />} />\n            <Route exact={true} path={`${process.env.PUBLIC_URL}/about`} component={About} />\n            <Route exact={true} path={`${process.env.PUBLIC_URL}/projects`} component={Projects} />\n        </Switch>\n    </div>\n);\n\nexport default Content;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header/Header\";\nimport Content from \"./components/Content/Content\"\n\nconst App = () => (\n  <div className=\"app\">\n    <Header />\n    <Content />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\"\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement && rootElement.hasChildNodes()) {\n    hydrate(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>,\n        rootElement);\n} else {\n    render(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>,\n        rootElement);\n}\n\nserviceWorker.register();"],"sourceRoot":""}